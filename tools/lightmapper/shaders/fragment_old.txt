#version 330 core

in vec3 fragmentColor;
in vec2 fragmentTexCoord;

out vec4 color;

uniform sampler2D imageTexture;
uniform float logStrength; // Range from 0.0 (linear) to 1.0 (full log)

void main()
{
    // Sample the texture
    vec4 texColor = texture(imageTexture, fragmentTexCoord);

    // Prevent log(0) by adding a small value (epsilon)
    float epsilon = 1e-6; // Adjust this value if needed
    vec3 logTexColor = log(texColor.rgb + epsilon);

    // Normalize the logarithmic values to a suitable range
    logTexColor = (logTexColor - log(epsilon)) / (log(1.0 + epsilon) - log(epsilon)); // Adjust range

    vec3 scaledTexColor = texColor.rgb * logStrength;

    // Interpolate between linear and logarithmic color based on logStrength
    //vec3 finalColor = mix(texColor.rgb, logTexColor, logStrength);
    vec3 finalColor = scaledTexColor;

    // Calculate final color by multiplying with fragmentColor
    color = vec4(fragmentColor, 1.0) * vec4(finalColor, 1.0);
}