name: Build and Test

on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  #  lint:
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: Checkout code
  #        uses: actions/checkout@v4
  #
  #      - name: Set up Clang
  #        run: wget -qO- https://apt.llvm.org/llvm.sh | sudo bash -s -- 18.1.8
  #
  #      - name: check clang version
  #        run: clang-18 --version
  #
  #      - name: Install CMake
  #        uses: jwlawson/actions-setup-cmake@v2
  #        with:
  #          cmake-version: '3.28.0'
  #
  #      - name: Create build directory
  #        run: mkdir build
  #        working-directory: ${{ github.workspace }}
  #
  #      - name: Install clang-tidy
  #        run: |
  #          sudo apt-get update
  #          sudo apt-get install -y clang-tidy clang-format
  #      - name: Prepare compile_commands.json
  #        run: |
  #          cmake -B build \
  #          -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
  #          -DCMAKE_C_COMPILER=$(which clang-18) \
  #          -DCMAKE_CXX_COMPILER=$(which clang++-18) \
  #          -DCMAKE_BUILD_TYPE=Release \
  #      - name: Run clang-tidy
  #        run: ./tools/lint.sh
  #      - name: Run clang-format
  #        run: ./tools/format.sh

  build:
    runs-on: ubuntu-latest
    #    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Clang
        run: wget -qO- https://apt.llvm.org/llvm.sh | sudo bash -s -- 18.1.8

      - name: check clang version
        run: clang-18 --version

      - name: Install CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.28.0'

      - name: Install build-essentials
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential mesa-common-dev libegl1-mesa-dev mesa-utils libasound2-dev libxext-dev
      - name: Create build directory
        run: mkdir build
        working-directory: ${{ github.workspace }}

      - name: Configure CMake
        shell: bash
        run: |
          cmake ${{ github.workspace }} \
          -DCMAKE_C_COMPILER=$(which clang-18) \
          -DCMAKE_CXX_COMPILER=$(which clang++-18) \
          -DCMAKE_BUILD_TYPE=Release \
          -B ${{ github.workspace }}/build/Release
        working-directory: ${{ github.workspace }}/build

      - name: Build
        run: make
        working-directory: ${{ github.workspace }}/build/Release

      - uses: actions/upload-artifact@v4
        with:
          name: game_linux
          path: ${{ github.workspace }}/bin